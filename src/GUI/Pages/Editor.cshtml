@page
@model EditorModel
@{
    ViewData["Title"] = "Home page";
}
@using file_organizer.Core

<style>
    .file-list input {
        width: @(EditorModel.GetNumberInputWidth() + "em");
    }
</style>
<div class="header">
    <div class="dropdown">
        <button onclick="dropdownButtonClick(this)">Settings ▼</button>
        <div class="dropdown-content">
            <button>Save</button>
            <button onclick="location.replace('http:\/\/localhost:8001/directorychooser')">Back</button>
        </div>
    </div>
    <h1>File Organizer</h1>
    <button onclick="ajaxPost(this, 'undo')" disabled="@(!EditorModel.Controller.CanUndo())" title="Undo">↺</button>
    <button onclick="ajaxPost(this, 'redo')" disabled="@(!EditorModel.Controller.CanRedo())" title="Redo">↻</button>
</div>
<div class="text-center">
    <ol class="file-list">
        @if (EditorModel.Controller != null)
        {
            @foreach (var item in EditorModel.Controller.Entries)
            {
                <li>
                    <div class="number-container">
                        <input type="number" name="toIndex" value="@item.Number">
                        <input type="hidden" name="fileName" value="@item.FileName">
                        <button onclick="ajaxPost(this, 'move')">✓</button>
                    </div>
                    <div class="item-name-container">
                        @* <p class="item-name">@item.PrettyName</p> *@
                        @item.PrettyName
                    </div>
                    <div>
                        <button class="cancel" onclick="ajaxPost(this, 'remove')">X</button>
                        <input type="hidden" name="fileName" value="@item.FileName">
                    </div>
                </li>
            }
        }
    </ol>
</div>
@* named handlers will not work without this *@
<form asp-page-handler="dummy"></form>
